Jugnu the little girl came to know about a social networking site called Friends-Book. To remain in contact
with her friends even after graduation, she decided to join the networking site. The signup page required
her to input a name and a password. However, the password must be strong. The website considers a
password to be strong if it satisfies the following criteria:
Its length is at least .
It contains at least one digit.
It contains at least one lowercase English character.
It contains at least one uppercase English character.
It contains at least one special character. The special characters are: !@#$%^&*()-+
She typed a random string of length in the password field but wasn't sure if it was strong. Given the
string she typed, can you find the minimum number of characters she must add to make her password
strong?
Note: Here's the set of types of characters in a form you can paste in your solution:
numbers = "0123456789"
lower_case = "abcdefghijklmnopqrstuvwxyz"
upper_case = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
special_characters = "!@#$%^&*()-+"
Input Format
The first line contains an integer denoting the length of the string.
The second line contains a string consisting of characters, the password typed by Jugnu. Each character
is either a lowercase/uppercase English alphabet, a digit, or a special character.
Constraints
Output Format
Print a single line containing a single integer denoting the answer to the problem.
Sample Input 0
3
Ab1
Sample Output 0
3
Explanation 0
She can make the password strong by adding characters, for example, $hk , turning the password into
Ab1$hk which is strong.
characters aren't enough since the length must be at least .
Sample Input 1
11
#HackerRank
Sample Output 1
1
Explanation 1
The password isn't strong, but she can make it strong by adding a single digit.




java solution
import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    static int minimumNumber(int n, String password) {
     int a2=0,a3=0,a4=0,a5=0,ans=0;
        String str= password;
     
        for(int i=0;i<n;i++)
        {
            if(str.charAt(i)>='0' && str.charAt(i)<='9')
            {
                a2++;
            }
            else
            if(str.charAt(i)>='a' && str.charAt(i)<='z')
            {
                a3++;
            }
            
            else
            if(str.charAt(i)>='A' && str.charAt(i)<='Z')
            {
                a4++;
            }
           else 
               if(str.charAt(i)=='!' || str.charAt(i)=='@' || str.charAt(i)=='#' )
               {
                   a5++;
               }
            else
                if( str.charAt(i)=='$' || str.charAt(i)=='^' || str.charAt(i)=='&' || str.charAt(i)=='*' ||str.charAt(i)=='%'  )
                    a5++;
            else
                if(  str.charAt(i)=='(' || str.charAt(i)==')' || str.charAt(i)=='-' || str.charAt(i)=='+')
                    a5++;
        }
          
            if(a2==0)
                ans+=1;
            if(a3==0)
                ans+=1;
            if(a4==0)
                ans+=1;
         if(a5==0)
                ans+=1;
            if(ans+password.length()<6)
                return 6-(password.length());
           
                return ans;
        
    }

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        String password = in.next();
        int answer = minimumNumber(n, password);
        System.out.println(answer);
        in.close();
    }
}
